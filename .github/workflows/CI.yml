name: CI

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
  pull_request:

# the `concurrency` settings ensure that not too many CI jobs run in parallel
concurrency:
  # group by workflow and ref; the last slightly strange component ensures that for pull
  # requests, we limit to 1 concurrent job, but for the master branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/master' || github.run_number }}
  # Cancel intermediate builds, but only if it is a pull request build.
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  # The CI test job
  test:
    name: ${{ matrix.gap-branch }} ${{ matrix.ABI }}
    runs-on: ${{ matrix.os }}
    # Don't run this twice on PRs for branches pushed to the same repository
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    strategy:
      fail-fast: false
      matrix:
        gap-branch:
          - master
          - stable-4.13
          - stable-4.12
        ABI: ['']
        os: [ubuntu-latest]
        include:
          - gap-branch: master
            ABI: 32
            os: ubuntu-18.04 # libmpfi-dev:i386 is missing in ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - uses: gap-actions/setup-gap@v2
        with:
          GAPBRANCH: ${{ matrix.gap-branch }}
          ABI: ${{ matrix.ABI }}
      - name: 'Install additional dependencies'
        run: |
          if [ "${{matrix.ABI}}" = "32" ]; then
            sudo apt-get install libmpfr-dev:i386 libmpfi-dev:i386 libmpc-dev:i386
          else
            sudo apt-get install libmpfr-dev libmpfi-dev libmpc-dev
          fi
      - uses: gap-actions/build-pkg@v1
        with:
          ABI: ${{ matrix.ABI }}
      - uses: gap-actions/run-pkg-tests@v2
      - uses: gap-actions/run-pkg-tests@v2
        with:
          only-needed: true
      - uses: gap-actions/process-coverage@v2
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # The documentation job
  manual:
    name: Build manuals
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: gap-actions/setup-gap@v2
      - uses: gap-actions/build-pkg-docs@v1
        with:
          use-latex: 'true'
      - name: 'Upload documentation'
        uses: actions/upload-artifact@v4
        with:
          name: manual
          path: ./doc/manual.pdf
          if-no-files-found: error
